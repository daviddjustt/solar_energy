# Generated by Django 5.1.7 on 2025-06-25 14:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserImport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Importação de Usuários',
                'verbose_name_plural': 'Importação de Usuários',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserExport',
            fields=[
            ],
            options={
                'verbose_name': 'Exportação de Usuários',
                'verbose_name_plural': 'Exportações de Usuários',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.user',),
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'Usuário', 'verbose_name_plural': 'Usuários'},
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=False, verbose_name='Ativo'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_admin',
            field=models.BooleanField(default=False, verbose_name='Administrador'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='user',
            name='celular',
            field=models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='Celular inválido', regex='^\\d{11}$')], verbose_name='Celular'),
        ),
        migrations.AlterField(
            model_name='user',
            name='cpf',
            field=models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='CPF inválido', regex='^\\d{11}$')], verbose_name='CPF'),
        ),
        migrations.AlterField(
            model_name='user',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Criado em'),
        ),
        migrations.AlterField(
            model_name='user',
            name='name',
            field=models.CharField(max_length=255, verbose_name='Nome'),
        ),
        migrations.AlterField(
            model_name='user',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Atualizado em'),
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_type', models.CharField(choices=[('welcome', 'Boas-vindas'), ('password_reset', 'Redefinição de Senha'), ('notification', 'Notificação')], max_length=20)),
                ('recipient', models.EmailField(max_length=254)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('sent', 'Enviado'), ('failed', 'Falhou'), ('pending', 'Pendente')], default='pending', max_length=10)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de E-mail',
                'verbose_name_plural': 'Logs de E-mails',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='UserChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_at', models.DateTimeField(auto_now_add=True, verbose_name='Data da alteração')),
                ('field_name', models.CharField(max_length=100, verbose_name='Campo alterado')),
                ('old_value', models.TextField(blank=True, null=True, verbose_name='Valor antigo')),
                ('new_value', models.TextField(blank=True, null=True, verbose_name='Valor novo')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='changes_made', to=settings.AUTH_USER_MODEL, verbose_name='Alterado por')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_logs', to=settings.AUTH_USER_MODEL, verbose_name='Usuário alterado')),
            ],
            options={
                'verbose_name': 'Log de Alteração de Usuário',
                'verbose_name_plural': 'Logs de Alterações de Usuários',
                'ordering': ['-changed_at'],
            },
        ),
    ]
