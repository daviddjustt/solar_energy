# Generated by Django 5.1.7 on 2025-06-25 23:13

import django.core.validators
import django.db.models.deletion
import solar.documents.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClientProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_code', models.CharField(max_length=50, verbose_name='Código do cliente')),
                ('project_holder_name', models.CharField(max_length=200, verbose_name='Nome do titular do projeto')),
                ('project_class', models.CharField(max_length=100, verbose_name='Classe')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('client_type', models.CharField(choices=[('PF', 'Pessoa Física'), ('PJ', 'Pessoa Jurídica')], default='PF', max_length=2, verbose_name='Tipo de cliente')),
                ('cep', models.CharField(max_length=9, verbose_name='CEP')),
                ('street', models.CharField(max_length=200, verbose_name='Logradouro')),
                ('number', models.CharField(max_length=20, verbose_name='Número')),
                ('neighborhood', models.CharField(max_length=100, verbose_name='Bairro')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('complement', models.CharField(blank=True, max_length=200, null=True, verbose_name='Complemento')),
                ('cpf', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message='CPF deve estar no formato XXX.XXX.XXX-XX', regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')], verbose_name='CPF')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Celular deve estar no formato (XX) XXXXX-XXXX', regex='^\\(\\d{2}\\)\\s\\d{4,5}-\\d{4}$')], verbose_name='Celular do titular')),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11, verbose_name='Longitude')),
                ('voltage', models.CharField(max_length=50, verbose_name='Tensão')),
                ('documentation_complete', models.BooleanField(default=False, verbose_name='Documentação completa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Projeto do Cliente',
                'verbose_name_plural': 'Projetos dos Clientes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsumerUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_code', models.CharField(max_length=50, verbose_name='Código do cliente da unidade')),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Porcentagem (%)')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumer_units', to='documents.clientproject')),
            ],
            options={
                'verbose_name': 'Unidade Consumidora',
                'verbose_name_plural': 'Unidades Consumidoras',
            },
        ),
        migrations.CreateModel(
            name='ProjectDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('documento_cliente', 'Documento do Cliente'), ('unidade_geradora_fatura', 'Unidade Geradora (Fatura)'), ('unidades_consumidoras_fatura', 'Unidades Consumidoras (Fatura)'), ('lista_material', 'Lista de Material'), ('procuracao_assinada', 'Procuração Assinada'), ('cartao_cnpj', 'Cartão CNPJ'), ('inscricao_estadual_municipal', 'Inscrição Estadual ou Municipal'), ('contrato_social', 'Contrato Social'), ('outros', 'Outros Documentos')], max_length=50, verbose_name='Tipo do documento')),
                ('file', models.FileField(upload_to=solar.documents.models.get_document_upload_path, verbose_name='Arquivo')),
                ('file_type', models.CharField(choices=[('photo', 'Foto'), ('pdf', 'PDF'), ('other', 'Outro')], max_length=10, verbose_name='Tipo de arquivo')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Aprovado')),
                ('rejection_reason', models.TextField(blank=True, null=True, verbose_name='Motivo da rejeição')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_documents', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='documents.clientproject')),
            ],
            options={
                'verbose_name': 'Documento do Projeto',
                'verbose_name_plural': 'Documentos do Projeto',
                'unique_together': {('project', 'document_type')},
            },
        ),
    ]
