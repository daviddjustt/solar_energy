# Generated by Django 5.1.7 on 2025-05-30 13:13

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Guarnicao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('name', models.CharField(help_text='Nome identificador da guarnição', max_length=50, verbose_name='Nome da Guarnição')),
                ('comandante', models.ForeignKey(help_text='Policial responsável pelo comando da guarnição', limit_choices_to={'is_active': True, 'is_operacoes': True}, on_delete=django.db.models.deletion.PROTECT, related_name='guarnicoes_as_comandante', to=settings.AUTH_USER_MODEL, verbose_name='Comandante')),
            ],
            options={
                'verbose_name': 'Guarnição',
                'verbose_name_plural': 'Guarnições',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CautelaIndividual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('data_entrega', models.DateTimeField(default=django.utils.timezone.now, help_text='Data e hora da entrega dos equipamentos para o policial', verbose_name='Data de Entrega dos Equipamentos')),
                ('data_devolucao', models.DateTimeField(blank=True, help_text='Data e hora da devolução dos equipamentos', null=True, verbose_name='Data de Devolução')),
                ('observacao_devolucao', models.TextField(blank=True, help_text='Observações gerais sobre a devolução dos equipamentos', verbose_name='Observação na Devolução')),
                ('aceite_status', models.CharField(choices=[('pendente', 'Pendente'), ('confirmado', 'Confirmado'), ('invalidado', 'Invalidado')], default='pendente', editable=False, help_text='Status atual do aceite da cautela pelo policial', max_length=15, verbose_name='Status do Aceite')),
                ('protocolo_aceite', models.CharField(blank=True, editable=False, help_text='Protocolo único gerado para o aceite', max_length=50, verbose_name='Protocolo de Aceite')),
                ('data_hora_aceite', models.DateTimeField(blank=True, editable=False, help_text='Data e hora em que o aceite foi confirmado', null=True, verbose_name='Data do Aceite')),
                ('policial', models.ForeignKey(help_text='Policial responsável pela cautela dos equipamentos', limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.PROTECT, related_name='cautelas_individuais', to=settings.AUTH_USER_MODEL, verbose_name='Policial')),
                ('guarnicao', models.ForeignKey(help_text='Guarnição à qual o policial está associado para esta cautela', on_delete=django.db.models.deletion.PROTECT, related_name='cautelas_guarnicao', to='oper.guarnicao', verbose_name='Guarnição')),
            ],
            options={
                'verbose_name': 'Cautela Individual',
                'verbose_name_plural': 'Cautelas Individuais',
                'ordering': ['-data_entrega'],
            },
        ),
        migrations.CreateModel(
            name='GuarnicaoMembro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('guarnicao', models.ForeignKey(help_text='Guarnição à qual o usuário pertence', on_delete=django.db.models.deletion.CASCADE, related_name='guarnicao_membros', to='oper.guarnicao', verbose_name='Guarnição')),
                ('user', models.ForeignKey(help_text='Policial membro da guarnição', limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='guarnicao_membros', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Membro de Guarnição',
                'verbose_name_plural': 'Membros de Guarnições',
            },
        ),
        migrations.AddField(
            model_name='guarnicao',
            name='membros',
            field=models.ManyToManyField(help_text='Policiais que compõem a guarnição', limit_choices_to={'is_active': True, 'is_operacoes': True}, related_name='guarnicoes_as_membro', through='oper.GuarnicaoMembro', to=settings.AUTH_USER_MODEL, verbose_name='Membros'),
        ),
        migrations.CreateModel(
            name='ItemCautela',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('tipo_equipamento', models.CharField(blank=True, choices=[('pistola', 'Pistola'), ('fuzil', 'Fuzil'), ('carabina', 'Carabina'), ('municao', 'Munição'), ('tablet', 'Tablet'), ('radio', 'Rádio'), ('outros', 'Outros'), ('colete_reflexivo', 'Colete Reflexivo'), ('capacete', 'Capacete'), ('expagidor', 'Expagidor (Gás de Pimenta)')], help_text='Categoria do equipamento cautelado', max_length=20, null=True, verbose_name='Tipo de Equipamento')),
                ('numero_serie', models.CharField(blank=True, help_text='Número de série ou identificação única do equipamento', max_length=50, verbose_name='Número de Série')),
                ('quantidade', models.PositiveIntegerField(default=1, help_text='Quantidade de itens deste tipo', verbose_name='Quantidade')),
                ('data_devolucao', models.DateTimeField(blank=True, help_text='Data e hora da devolução do item', null=True, verbose_name='Data de Devolução')),
                ('status_equipamento', models.CharField(choices=[('em_condicoes', 'Em Condições'), ('danificado', 'Danificado'), ('inoperante', 'Inoperante'), ('extraviado', 'Extraviado')], default='em_condicoes', help_text='Condição do equipamento no momento da devolução', max_length=20, verbose_name='Status do Equipamento')),
                ('descricao_danos', models.TextField(blank=True, help_text='Descreva os danos encontrados no equipamento durante a devolução', verbose_name='Descrição dos Danos')),
                ('devolucao_confirmada', models.BooleanField(default=False, help_text='Indica se a devolução foi confirmada pelo responsável', verbose_name='Devolução Confirmada')),
                ('protocolo_devolucao', models.CharField(blank=True, help_text='Protocolo único gerado para a devolução', max_length=50, verbose_name='Protocolo de Devolução')),
                ('observacao', models.TextField(blank=True, help_text='Observações adicionais sobre o item', verbose_name='Observações')),
                ('cautela', models.ForeignKey(help_text='Cautela à qual este item pertence', on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='oper.cautelaindividual', verbose_name='Cautela')),
            ],
            options={
                'verbose_name': 'Item de Cautela',
                'verbose_name_plural': 'Itens de Cautela',
                'ordering': ['tipo_equipamento', 'numero_serie'],
            },
        ),
        migrations.CreateModel(
            name='Notificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('titulo', models.CharField(max_length=100, verbose_name='Título')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('tipo', models.CharField(choices=[('cautela_pendente', 'Cautela Pendente'), ('devolucao_pendente', 'Devolução Pendente'), ('devolucao_confirmada', 'Devolução Confirmada'), ('equipamento_danificado', 'Equipamento Danificado')], db_index=True, max_length=30, verbose_name='Tipo')),
                ('lida', models.BooleanField(db_index=True, default=False, verbose_name='Lida')),
                ('data_leitura', models.DateTimeField(blank=True, null=True, verbose_name='Data de Leitura')),
                ('link', models.CharField(blank=True, max_length=255, verbose_name='Link')),
                ('objeto_id', models.UUIDField(blank=True, help_text='ID do objeto ao qual a notificação se refere (cautela, item, etc)', null=True, verbose_name='ID do objeto referenciado')),
                ('objeto_tipo', models.CharField(blank=True, help_text='Tipo do objeto referenciado (cautela, item, etc)', max_length=30, verbose_name='Tipo do objeto referenciado')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Notificação',
                'verbose_name_plural': 'Notificações',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Operacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('name', models.CharField(help_text='Nome identificador da operação policial', max_length=255, verbose_name='Nome')),
                ('description', models.TextField(blank=True, help_text='Descrição detalhada dos objetivos e características da operação', verbose_name='Descrição')),
                ('start_date', models.DateField(help_text='Data de início da operação', verbose_name='Data de Início')),
                ('end_date', models.DateField(help_text='Data prevista para término da operação', verbose_name='Data de Término')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se a operação está atualmente ativa', verbose_name='Ativa')),
            ],
            options={
                'verbose_name': 'Operação',
                'verbose_name_plural': 'Operações',
                'ordering': ['-start_date'],
                'indexes': [models.Index(fields=['-start_date'], name='oper_operac_start_d_170853_idx'), models.Index(fields=['is_active'], name='oper_operac_is_acti_a8b667_idx'), models.Index(fields=['name'], name='oper_operac_name_5863b6_idx')],
                'unique_together': {('name', 'start_date')},
            },
        ),
        migrations.AddField(
            model_name='guarnicao',
            name='operacao',
            field=models.ForeignKey(help_text='Operação à qual esta guarnição pertence', on_delete=django.db.models.deletion.CASCADE, related_name='guarnicoes', to='oper.operacao', verbose_name='Operação'),
        ),
        migrations.CreateModel(
            name='Veiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('placa', models.CharField(help_text='Placa do veículo sem espaços ou traços. Formatos aceitos: ABC1234 ou ABC1A23', max_length=7, unique=True, validators=[django.core.validators.RegexValidator(message='Formato de placa inválido. Use formato antigo (ABC1234) ou Mercosul (ABC1A23)', regex='^[A-Z]{3}[0-9][A-Z0-9][0-9]{2}$')], verbose_name='Placa')),
                ('modelo', models.CharField(choices=[('l200', 'L200'), ('ranger', 'Ranger'), ('tucson', 'Tucson'), ('hilux', 'Hilux'), ('duster', 'Duster'), ('outros', 'Outros')], help_text='Modelo do veículo conforme especificação operacional', max_length=20, verbose_name='Modelo')),
                ('em_condicao', models.BooleanField(default=True, help_text='Indica se o veículo está apto para uso em operações', verbose_name='Em condições de uso')),
                ('observacao', models.TextField(blank=True, help_text='Observações sobre o estado do veículo, obrigatório quando não está em condições de uso', verbose_name='Observação')),
                ('km_atual', models.PositiveIntegerField(default=0, help_text='Quilometragem atual do veículo em KM', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quilometragem atual')),
                ('data_ultima_revisao', models.DateField(blank=True, help_text='Data da última revisão ou manutenção preventiva', null=True, verbose_name='Data da última revisão')),
                ('km_proxima_revisao', models.PositiveIntegerField(blank=True, help_text='Quilometragem programada para próxima revisão', null=True, verbose_name='KM da próxima revisão')),
            ],
            options={
                'verbose_name': 'Veículo',
                'verbose_name_plural': 'Veículos',
                'ordering': ['placa'],
                'indexes': [models.Index(fields=['placa'], name='oper_veicul_placa_63e595_idx'), models.Index(fields=['modelo'], name='oper_veicul_modelo_beb0c2_idx'), models.Index(fields=['em_condicao'], name='oper_veicul_em_cond_ce9454_idx'), models.Index(fields=['km_atual'], name='oper_veicul_km_atua_dcd004_idx')],
            },
        ),
        migrations.AddField(
            model_name='guarnicao',
            name='veiculo',
            field=models.OneToOneField(blank=True, help_text='Veículo designado para esta guarnição', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='guarnicao_associada', to='oper.veiculo', verbose_name='Veículo'),
        ),
        migrations.CreateModel(
            name='FotoVeiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('imagem', models.ImageField(help_text='Foto do veículo (formatos: jpg, jpeg, png, webp)', upload_to='veiculos/fotos/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'webp'])], verbose_name='Imagem')),
                ('descricao', models.CharField(help_text='Descrição do que a foto documenta', max_length=255, verbose_name='Descrição')),
                ('data_foto', models.DateTimeField(default=django.utils.timezone.now, help_text='Data e hora em que a foto foi tirada', verbose_name='Data da foto')),
                ('veiculo', models.ForeignKey(help_text='Veículo ao qual a foto pertence', on_delete=django.db.models.deletion.CASCADE, related_name='fotos', to='oper.veiculo', verbose_name='Veículo')),
            ],
            options={
                'verbose_name': 'Foto do Veículo',
                'verbose_name_plural': 'Fotos dos Veículos',
                'ordering': ['-data_foto'],
            },
        ),
        migrations.CreateModel(
            name='Abastecimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('data', models.DateTimeField(default=django.utils.timezone.now, help_text='Data e hora do abastecimento', verbose_name='Data e Hora')),
                ('km_atual', models.PositiveIntegerField(help_text='Quilometragem do veículo no momento do abastecimento', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quilometragem Atual')),
                ('litros', models.DecimalField(decimal_places=3, help_text='Quantidade de combustível abastecida em litros', max_digits=7, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Litros')),
                ('valor_total', models.DecimalField(decimal_places=2, help_text='Valor total pago pelo combustível', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor Total')),
                ('posto', models.CharField(blank=True, help_text='Nome do posto onde foi realizado o abastecimento', max_length=100, verbose_name='Posto de Combustível')),
                ('observacao', models.TextField(blank=True, help_text='Observações sobre o abastecimento', verbose_name='Observação')),
                ('veiculo', models.ForeignKey(help_text='Veículo abastecido', on_delete=django.db.models.deletion.CASCADE, related_name='abastecimentos', to='oper.veiculo', verbose_name='Veículo')),
            ],
            options={
                'verbose_name': 'Abastecimento',
                'verbose_name_plural': 'Abastecimentos',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='AceiteCautela',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('protocolo', models.CharField(help_text='Protocolo único para identificação do aceite', max_length=50, unique=True, verbose_name='Número de Protocolo')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('confirmado', 'Confirmado'), ('invalidado', 'Invalidado')], default='pendente', help_text='Status atual do aceite', max_length=15, verbose_name='Status')),
                ('data_aceite', models.DateTimeField(blank=True, help_text='Data e hora em que o aceite foi confirmado', null=True, verbose_name='Data do Aceite')),
                ('ip_aceite', models.GenericIPAddressField(blank=True, help_text='Endereço IP de onde o aceite foi realizado', null=True, verbose_name='IP do Aceite')),
                ('observacao', models.TextField(blank=True, help_text='Observações do policial sobre o aceite', verbose_name='Observação')),
                ('cautela', models.ForeignKey(help_text='Cautela relacionada a este aceite', on_delete=django.db.models.deletion.CASCADE, related_name='historico_aceites', to='oper.cautelaindividual', verbose_name='Cautela')),
            ],
            options={
                'verbose_name': 'Aceite de Cautela',
                'verbose_name_plural': 'Aceites de Cautela',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['cautela', 'status'], name='oper_aceite_cautela_9d10f6_idx'), models.Index(fields=['protocolo'], name='oper_aceite_protoco_2cdc6d_idx'), models.Index(fields=['data_aceite'], name='oper_aceite_data_ac_337fc9_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='cautelaindividual',
            index=models.Index(fields=['policial', 'data_entrega'], name='oper_cautel_policia_224f2b_idx'),
        ),
        migrations.AddIndex(
            model_name='cautelaindividual',
            index=models.Index(fields=['guarnicao', 'data_entrega'], name='oper_cautel_guarnic_8b97b7_idx'),
        ),
        migrations.AddIndex(
            model_name='cautelaindividual',
            index=models.Index(fields=['aceite_status'], name='oper_cautel_aceite__fc7136_idx'),
        ),
        migrations.AddIndex(
            model_name='guarnicaomembro',
            index=models.Index(fields=['guarnicao', 'user'], name='oper_guarni_guarnic_857a26_idx'),
        ),
        migrations.AddIndex(
            model_name='guarnicaomembro',
            index=models.Index(fields=['user'], name='oper_guarni_user_id_140c3b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='guarnicaomembro',
            unique_together={('guarnicao', 'user')},
        ),
        migrations.AddIndex(
            model_name='itemcautela',
            index=models.Index(fields=['cautela', 'tipo_equipamento'], name='oper_itemca_cautela_b7cfc8_idx'),
        ),
        migrations.AddIndex(
            model_name='itemcautela',
            index=models.Index(fields=['numero_serie'], name='oper_itemca_numero__2c333c_idx'),
        ),
        migrations.AddIndex(
            model_name='itemcautela',
            index=models.Index(fields=['status_equipamento'], name='oper_itemca_status__58e0e2_idx'),
        ),
        migrations.AddIndex(
            model_name='notificacao',
            index=models.Index(fields=['-created_at'], name='oper_notifi_created_e14a93_idx'),
        ),
        migrations.AddIndex(
            model_name='notificacao',
            index=models.Index(fields=['usuario', 'lida'], name='oper_notifi_usuario_8647f2_idx'),
        ),
        migrations.AddIndex(
            model_name='notificacao',
            index=models.Index(fields=['tipo', 'usuario'], name='oper_notifi_tipo_169b2a_idx'),
        ),
        migrations.AddIndex(
            model_name='guarnicao',
            index=models.Index(fields=['operacao', 'name'], name='oper_guarni_operaca_700ff9_idx'),
        ),
        migrations.AddIndex(
            model_name='guarnicao',
            index=models.Index(fields=['comandante'], name='oper_guarni_comanda_b05039_idx'),
        ),
        migrations.AddIndex(
            model_name='fotoveiculo',
            index=models.Index(fields=['veiculo', '-data_foto'], name='oper_fotove_veiculo_4f43b5_idx'),
        ),
        migrations.AddIndex(
            model_name='abastecimento',
            index=models.Index(fields=['veiculo', '-data'], name='oper_abaste_veiculo_93a2d2_idx'),
        ),
        migrations.AddIndex(
            model_name='abastecimento',
            index=models.Index(fields=['-data'], name='oper_abaste_data_7a83e7_idx'),
        ),
        migrations.AddIndex(
            model_name='abastecimento',
            index=models.Index(fields=['km_atual'], name='oper_abaste_km_atua_8330ef_idx'),
        ),
    ]
